// Generated by Dagger (https://dagger.dev).
package com.androidexam.stayfinder.di;

import android.app.Application;
import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesContextFactory implements Factory<Context> {
  private final AppModule module;

  private final Provider<Application> applicationProvider;

  public AppModule_ProvidesContextFactory(AppModule module,
      Provider<Application> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public Context get() {
    return providesContext(module, applicationProvider.get());
  }

  public static AppModule_ProvidesContextFactory create(AppModule module,
      Provider<Application> applicationProvider) {
    return new AppModule_ProvidesContextFactory(module, applicationProvider);
  }

  public static Context providesContext(AppModule instance, Application application) {
    return Preconditions.checkNotNullFromProvides(instance.providesContext(application));
  }
}
